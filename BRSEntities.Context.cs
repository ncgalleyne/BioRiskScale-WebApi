//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication4
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Bio_Risk_ScaleEntities : DbContext
    {
        public Bio_Risk_ScaleEntities()
            : base("name=Bio_Risk_ScaleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Metric_Info> Metric_Info { get; set; }
        public virtual DbSet<C_Geography> C_Geography { get; set; }
        public virtual DbSet<Bio_Clinical> Bio_Clinical { get; set; }
        public virtual DbSet<Country_Codes> Country_Codes { get; set; }
        public virtual DbSet<Drugs_Vaccines> Drugs_Vaccines { get; set; }
        public virtual DbSet<GHSI> GHSIs { get; set; }
        public virtual DbSet<Metric_Sources> Metric_Sources { get; set; }
        public virtual DbSet<Psych> Psyches { get; set; }
        public virtual DbSet<Resevoir_Host_Region> Resevoir_Host_Regions { get; set; }
        public virtual DbSet<Testing_Pathogens> Testing_Pathogens { get; set; }
        public virtual DbSet<Transmission> Transmissions { get; set; }
        public virtual DbSet<User_Accounts> User_Accounts { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Survey_History> Survey_History { get; set; }
    
        public virtual ObjectResult<Nullable<int>> AddSurvey_Results(Nullable<int> compliance, Nullable<int> resevoir_Type, Nullable<int> resevoir_End, Nullable<int> host_End, Nullable<int> degree_of_contact, Nullable<int> number_of_possible_modes, Nullable<int> environmental_persistance, Nullable<int> infection_illness_overlap, Nullable<int> drug_treatment, Nullable<int> vaccine_Treatment, Nullable<int> generation_time, Nullable<int> duration_of_immunity, Nullable<int> cFR, Nullable<int> iFR, Nullable<int> history, Nullable<int> public_Awareness, Nullable<int> symptom_induced_fear, Nullable<int> uncertainty_of_Agent_Species, Nullable<int> uncertainty_of_Agent_Relatives, Nullable<int> detection, Nullable<int> system, Nullable<int> environment, Nullable<int> prevention, Nullable<int> response, string user_Id, Nullable<System.DateTime> date)
        {
            var complianceParameter = compliance.HasValue ?
                new ObjectParameter("Compliance", compliance) :
                new ObjectParameter("Compliance", typeof(int));
    
            var resevoir_TypeParameter = resevoir_Type.HasValue ?
                new ObjectParameter("Resevoir_Type", resevoir_Type) :
                new ObjectParameter("Resevoir_Type", typeof(int));
    
            var resevoir_EndParameter = resevoir_End.HasValue ?
                new ObjectParameter("Resevoir_End", resevoir_End) :
                new ObjectParameter("Resevoir_End", typeof(int));
    
            var host_EndParameter = host_End.HasValue ?
                new ObjectParameter("Host_End", host_End) :
                new ObjectParameter("Host_End", typeof(int));
    
            var degree_of_contactParameter = degree_of_contact.HasValue ?
                new ObjectParameter("Degree_of_contact", degree_of_contact) :
                new ObjectParameter("Degree_of_contact", typeof(int));
    
            var number_of_possible_modesParameter = number_of_possible_modes.HasValue ?
                new ObjectParameter("Number_of_possible_modes", number_of_possible_modes) :
                new ObjectParameter("Number_of_possible_modes", typeof(int));
    
            var environmental_persistanceParameter = environmental_persistance.HasValue ?
                new ObjectParameter("Environmental_persistance", environmental_persistance) :
                new ObjectParameter("Environmental_persistance", typeof(int));
    
            var infection_illness_overlapParameter = infection_illness_overlap.HasValue ?
                new ObjectParameter("Infection_illness_overlap", infection_illness_overlap) :
                new ObjectParameter("Infection_illness_overlap", typeof(int));
    
            var drug_treatmentParameter = drug_treatment.HasValue ?
                new ObjectParameter("Drug_treatment", drug_treatment) :
                new ObjectParameter("Drug_treatment", typeof(int));
    
            var vaccine_TreatmentParameter = vaccine_Treatment.HasValue ?
                new ObjectParameter("Vaccine_Treatment", vaccine_Treatment) :
                new ObjectParameter("Vaccine_Treatment", typeof(int));
    
            var generation_timeParameter = generation_time.HasValue ?
                new ObjectParameter("Generation_time", generation_time) :
                new ObjectParameter("Generation_time", typeof(int));
    
            var duration_of_immunityParameter = duration_of_immunity.HasValue ?
                new ObjectParameter("Duration_of_immunity", duration_of_immunity) :
                new ObjectParameter("Duration_of_immunity", typeof(int));
    
            var cFRParameter = cFR.HasValue ?
                new ObjectParameter("CFR", cFR) :
                new ObjectParameter("CFR", typeof(int));
    
            var iFRParameter = iFR.HasValue ?
                new ObjectParameter("IFR", iFR) :
                new ObjectParameter("IFR", typeof(int));
    
            var historyParameter = history.HasValue ?
                new ObjectParameter("History", history) :
                new ObjectParameter("History", typeof(int));
    
            var public_AwarenessParameter = public_Awareness.HasValue ?
                new ObjectParameter("Public_Awareness", public_Awareness) :
                new ObjectParameter("Public_Awareness", typeof(int));
    
            var symptom_induced_fearParameter = symptom_induced_fear.HasValue ?
                new ObjectParameter("Symptom_induced_fear", symptom_induced_fear) :
                new ObjectParameter("Symptom_induced_fear", typeof(int));
    
            var uncertainty_of_Agent_SpeciesParameter = uncertainty_of_Agent_Species.HasValue ?
                new ObjectParameter("Uncertainty_of_Agent_Species", uncertainty_of_Agent_Species) :
                new ObjectParameter("Uncertainty_of_Agent_Species", typeof(int));
    
            var uncertainty_of_Agent_RelativesParameter = uncertainty_of_Agent_Relatives.HasValue ?
                new ObjectParameter("Uncertainty_of_Agent_Relatives", uncertainty_of_Agent_Relatives) :
                new ObjectParameter("Uncertainty_of_Agent_Relatives", typeof(int));
    
            var detectionParameter = detection.HasValue ?
                new ObjectParameter("Detection", detection) :
                new ObjectParameter("Detection", typeof(int));
    
            var systemParameter = system.HasValue ?
                new ObjectParameter("System", system) :
                new ObjectParameter("System", typeof(int));
    
            var environmentParameter = environment.HasValue ?
                new ObjectParameter("Environment", environment) :
                new ObjectParameter("Environment", typeof(int));
    
            var preventionParameter = prevention.HasValue ?
                new ObjectParameter("Prevention", prevention) :
                new ObjectParameter("Prevention", typeof(int));
    
            var responseParameter = response.HasValue ?
                new ObjectParameter("Response", response) :
                new ObjectParameter("Response", typeof(int));
    
            var user_IdParameter = user_Id != null ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddSurvey_Results", complianceParameter, resevoir_TypeParameter, resevoir_EndParameter, host_EndParameter, degree_of_contactParameter, number_of_possible_modesParameter, environmental_persistanceParameter, infection_illness_overlapParameter, drug_treatmentParameter, vaccine_TreatmentParameter, generation_timeParameter, duration_of_immunityParameter, cFRParameter, iFRParameter, historyParameter, public_AwarenessParameter, symptom_induced_fearParameter, uncertainty_of_Agent_SpeciesParameter, uncertainty_of_Agent_RelativesParameter, detectionParameter, systemParameter, environmentParameter, preventionParameter, responseParameter, user_IdParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddUser_Acct(Nullable<int> uID, string firstName, string lastName, string email, string password, string location, string occupation)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddUser_Acct", uIDParameter, firstNameParameter, lastNameParameter, emailParameter, passwordParameter, locationParameter, occupationParameter);
        }
    
        public virtual ObjectResult<Login_User_Acct_Result> Login_User_Acct(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_User_Acct_Result>("Login_User_Acct", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FinishRegistration(string uID, string fName, string lName, string loc, string occupation)
        {
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("Loc", loc) :
                new ObjectParameter("Loc", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FinishRegistration", uIDParameter, fNameParameter, lNameParameter, locParameter, occupationParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UpdateUserCredentials(string uID, string fName, string lName, string email, string loc, string occupation)
        {
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("Loc", loc) :
                new ObjectParameter("Loc", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UpdateUserCredentials", uIDParameter, fNameParameter, lNameParameter, emailParameter, locParameter, occupationParameter);
        }
    }
}
